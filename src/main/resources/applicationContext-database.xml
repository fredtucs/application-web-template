<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <context:property-placeholder location="classpath:database.properties"/>

    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="org.wifry.fooddelivery.scope.ViewScope"/>
                </entry>
            </map>
        </property>
    </bean>

    <!--<jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS" enabled="#{'${db.hbm2ddl}' != ''}">-->
    <!--<jdbc:script location="classpath:sql/trigger.sql" separator="/"/>-->
    <!--</jdbc:initialize-database>-->

    <!-- Configure a DataSource Connection with tomcat -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="${tomcat.initial_size}"/>
        <property name="maxActive" value="${tomcat.max_active}"/>
        <property name="maxIdle" value="${tomcat.max_idle}"/>
        <property name="minIdle" value="${tomcat.min_idle}"/>
        <property name="defaultAutoCommit" value="${tomcat.defaultAutoCommit}"/>
        <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
        <property name="minEvictableIdleTimeMillis" value="3600000"/>
        <property name="validationQuery" value="${tomcat.validationQuery}"/>
    </bean>

    <!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/myoracle"/>
        <property name="cache" value="false"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="proxyInterface" value="javax.sql.DataSource"/>
    </bean>-->

    <!-- Hibernate as JPA vendor-->
    <bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
          p:database="${jpa.database}" p:showSql="${jpa.showSql}"/>

    <!-- Configure a JPA EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="dataSource" p:packagesToScan="org.wifry.fooddelivery.model"
          p:jpaVendorAdapter-ref="jpaAdapter" depends-on="auditInterceptor">

        <property name="jpaProperties">
            <map>
                <entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}"/>
                <entry key="hibernate.dialect" value="${hibernate.dialect}"/>
                <entry key="hibernate.connection.autocommit" value="${hibernate.connection.autocommit}"/>
                <entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache}"/>
                <entry key="hibernate.cache.use_query_cache" value="${hibernate.query.cache}"/>
                <entry key="hibernate.cache.region.factory_class"
                       value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/>
                <entry key="hibernate.generate_statistics" value="${hibernate.statistics}"/>
                <entry key="hibernate.ejb.interceptor" value-ref="auditInterceptor"/>
            </map>
        </property>

        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>

    </bean>

    <!-- Configure a Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="cancel*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="allDaoOperation"
                      expression="execution(* org.wifry.fooddelivery.services..*.*(..))"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="allDaoOperation"/>

    </aop:config>

    <!-- @PersistenceUnit annotation -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>


</beans>
